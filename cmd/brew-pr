#!/bin/bash

set -euo pipefail

# Parse args
items=()
args=()
while [[ $# -gt 0 ]]; do
    case "$1" in
    --)
        shift
        args=("$@")
        break
        ;;
    -n | --dry-run) dry=1 ;;
    *) items+=("$1") ;;
    esac
    shift
done

# If dry run, print updatable packages
if [ -n "${dry:-}" ]; then
    brew livecheck -q --newer-only "${items:---installed}"
    exit 0
fi

# HACK: brew filters out $GNUPGHOME, but we need gpg to sign our commit
rm -rf ~/.gnupg
cp -R ~/.local/share/gnupg ~/.gnupg 2>/dev/null
trap "rm -rf ~/.gnupg" EXIT

for name in "${items[@]}"; do
    # Get new version
    details=$(brew livecheck -q "$name" --json | jq -r '.[0] | select(.version.outdated==true) | to_entries')
    type=$(echo "$details" | jq -r '.[0].key')
    version=$(echo "$details" | jq -r '.[1].value.latest')
    [[ -z "$version" ]] && echo "WARNING: $name is up to date" && continue

    # Open PR
    brew bump-"$type"-pr "$name" --version="$version" "${args[@]:--q}"
    tap=$([[ "$type" == "formula" ]] && echo "core" || echo "cask")
    git -C "$(brew --repo homebrew/"$tap")" branch -D bump-"$name"-"$version"
done
